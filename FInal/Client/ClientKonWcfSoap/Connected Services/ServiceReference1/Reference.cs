//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ClientKonWcfSoap.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Employee", Namespace="http://schemas.datacontract.org/2004/07/WCFSOAPService.Model")]
    [System.SerializableAttribute()]
    public partial class Employee : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.IEmployeeService")]
    public interface IEmployeeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/getAllEmployees", ReplyAction="http://tempuri.org/IEmployeeService/getAllEmployeesResponse")]
        ClientKonWcfSoap.ServiceReference1.Employee[] getAllEmployees();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/getAllEmployees", ReplyAction="http://tempuri.org/IEmployeeService/getAllEmployeesResponse")]
        System.Threading.Tasks.Task<ClientKonWcfSoap.ServiceReference1.Employee[]> getAllEmployeesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Get", ReplyAction="http://tempuri.org/IEmployeeService/GetResponse")]
        ClientKonWcfSoap.ServiceReference1.Employee Get(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Get", ReplyAction="http://tempuri.org/IEmployeeService/GetResponse")]
        System.Threading.Tasks.Task<ClientKonWcfSoap.ServiceReference1.Employee> GetAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Add", ReplyAction="http://tempuri.org/IEmployeeService/AddResponse")]
        void Add(ClientKonWcfSoap.ServiceReference1.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Add", ReplyAction="http://tempuri.org/IEmployeeService/AddResponse")]
        System.Threading.Tasks.Task AddAsync(ClientKonWcfSoap.ServiceReference1.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Edit", ReplyAction="http://tempuri.org/IEmployeeService/EditResponse")]
        void Edit(ClientKonWcfSoap.ServiceReference1.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Edit", ReplyAction="http://tempuri.org/IEmployeeService/EditResponse")]
        System.Threading.Tasks.Task EditAsync(ClientKonWcfSoap.ServiceReference1.Employee e);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Remove", ReplyAction="http://tempuri.org/IEmployeeService/RemoveResponse")]
        void Remove(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IEmployeeService/Remove", ReplyAction="http://tempuri.org/IEmployeeService/RemoveResponse")]
        System.Threading.Tasks.Task RemoveAsync(int Id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IEmployeeServiceChannel : ClientKonWcfSoap.ServiceReference1.IEmployeeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EmployeeServiceClient : System.ServiceModel.ClientBase<ClientKonWcfSoap.ServiceReference1.IEmployeeService>, ClientKonWcfSoap.ServiceReference1.IEmployeeService {
        
        public EmployeeServiceClient() {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EmployeeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ClientKonWcfSoap.ServiceReference1.Employee[] getAllEmployees() {
            return base.Channel.getAllEmployees();
        }
        
        public System.Threading.Tasks.Task<ClientKonWcfSoap.ServiceReference1.Employee[]> getAllEmployeesAsync() {
            return base.Channel.getAllEmployeesAsync();
        }
        
        public ClientKonWcfSoap.ServiceReference1.Employee Get(int id) {
            return base.Channel.Get(id);
        }
        
        public System.Threading.Tasks.Task<ClientKonWcfSoap.ServiceReference1.Employee> GetAsync(int id) {
            return base.Channel.GetAsync(id);
        }
        
        public void Add(ClientKonWcfSoap.ServiceReference1.Employee e) {
            base.Channel.Add(e);
        }
        
        public System.Threading.Tasks.Task AddAsync(ClientKonWcfSoap.ServiceReference1.Employee e) {
            return base.Channel.AddAsync(e);
        }
        
        public void Edit(ClientKonWcfSoap.ServiceReference1.Employee e) {
            base.Channel.Edit(e);
        }
        
        public System.Threading.Tasks.Task EditAsync(ClientKonWcfSoap.ServiceReference1.Employee e) {
            return base.Channel.EditAsync(e);
        }
        
        public void Remove(int Id) {
            base.Channel.Remove(Id);
        }
        
        public System.Threading.Tasks.Task RemoveAsync(int Id) {
            return base.Channel.RemoveAsync(Id);
        }
    }
}
